volumes:
  rocketchat-uploads:
  rocketchat-custom-scripts:
  traefik-certificates:
  rocketchat-mongodb:

services:
  mongodb:
    image: bitnami/mongodb:5.0
    platform: linux/amd64
    volumes:
     - rocketchat-mongodb:/bitnami/mongodb
    environment:
      MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL}
      MONGODB_USERNAME: ${MONGODB_ADMIN_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_ADMIN_PASSWORD}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  rocketchat-logout:
    build: 
      context: .

    environment:
      ROCKETCHAT_URL: ${ROCKETCHAT_URL}
      ROCKETCHAT_USER: ${ROCKETCHAT_USER}
      ROCKETCHAT_PASSWORD: ${ROCKETCHAT_PASSWORD}
      ROCKETCHAT_HOSTNAME: ${ROCKETCHAT_HOSTNAME}
      LOGOUT_LIMIT: ${LOGOUT_LIMIT}
      SLEEP_TIME: ${SLEEP_TIME}
    restart: always
    depends_on:
      rocketchat:
        condition: service_healthy

  rocketchat:
    image: rocket.chat:5.0
    platform: linux/amd64
    volumes:
      - rocketchat-uploads:/app/uploads
      - rocketchat-custom-scripts:/app/custom_scripts
    environment:
      PORT: 3000
      ROOT_URL: ${ROOT_URL}
      MONGO_URL: ${MONGO_URL}
      DEPLOY_METHOD: docker
      OVERWRITE_SETTING_Accounts_UseDNSDomainCheck: false
      OVERWRITE_SETTING_Accounts_LoginExpiration: 1
      OVERWRITE_SETTING_Accounts_Default_User_Preferences_enableAutoAway: true
      OVERWRITE_SETTING_Accounts_Default_User_Preferences_idleTimeLimit: 120
      OVERWRITE_SETTING_Accounts_ForgetUserSessionOnWindowClose: true
      OVERWRITE_SETTING_Accounts_TwoFactorAuthenticationEnabled: false
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASS: ${ADMIN_PASSWORD}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      DISABLE_ANONYMOUS_READ: true
      DISABLE_ANONYMOUS_WRITE: true
    healthcheck:
      test: >
         /usr/local/bin/node -e '
         const http = require("http");
         const options = {
           host: "localhost",
           port: 3000,
           path: "/api/info",
           timeout: 2000
         };
         const healthCheck = http.request(options, (res) => {
           console.log(`HEALTHCHECK STATUS: $${res.statusCode}`);
           if (res.statusCode == 200) {
             process.exit(0);
           } else {
             process.exit(1);
           }
         });
         healthCheck.on("error", function (err) {
           console.error("ERROR");
           process.exit(1);
         });
         healthCheck.end();'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rocketchat.rule=Host(`${ROCKETCHAT_HOSTNAME}`)"
      - "traefik.http.routers.rocketchat.service=rocketchat"
      - "traefik.http.routers.rocketchat.entrypoints=websecure"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=${PORT}"
      - "traefik.http.services.rocketchat.loadbalancer.passhostheader=true"
      - "traefik.http.routers.rocketchat.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      traefik:
        condition: service_healthy

  traefik:
    image: traefik:2.8
    platform: linux/amd64
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik/acme
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${ROCKETCHAT_HOSTNAME}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
      - "traefik.http.routers.dashboard.middlewares=authtraefik"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped