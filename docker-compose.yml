volumes:
  rocketchat-uploads:
  rocketchat-custom-scripts:
  traefik-certificates:
  rocketchat-mongodb:

networks:
  vpn_internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24

  host:
    external: true

services:
  mongodb:
    image: bitnami/mongodb:5.0
    container_name: mongodb
    volumes:
     - rocketchat-mongodb:/bitnami/mongodb
    environment:
      MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL}
      MONGODB_USERNAME: ${MONGODB_ADMIN_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_ADMIN_PASSWORD}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_ROOT_PASSWORD: ${MONGODB_ADMIN_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  rocketchat-logout:
    build: 
      context: ./logout
    environment:
      ROCKETCHAT_URL: ${ROCKETCHAT_URL}
      ROCKETCHAT_USER: ${ROCKETCHAT_USER}
      ROCKETCHAT_PASSWORD: ${ROCKETCHAT_PASSWORD}
      LOGOUT_LIMIT: ${LOGOUT_LIMIT}
      SLEEP_TIME: ${SLEEP_TIME}
    restart: always
    depends_on:
      rocketchat:
        condition: service_healthy
    networks:
      vpn_internal:
        ipv4_address: 172.16.0.3

    extra_hosts:
      - "rocketchat:172.16.0.2"

  rocketchat:
    image: rocket.chat:5.0
    container_name: rocketchat
    volumes:
      - rocketchat-uploads:/app/uploads
      - rocketchat-custom-scripts:/app/custom_scripts
    environment:
      PORT: ${ROCKETCHAT_PORT}
      ROOT_URL: ${ROCKETCHAT_URL}
      MONGO_URL: ${MONGO_URL}
      MONGO_OPLOG_URL: ${MONGO_OPLOG_URL}
      DEPLOY_METHOD: docker
#      Test 2 params
      Accounts_UseDNSDomainCheck: 'false'
      Accounts_RegistrationForm: 'disabled'
      OVERWRITE_SETTING_Accounts_LoginExpiration: 1
      OVERWRITE_SETTING_Accounts_Default_User_Preferences_enableAutoAway: true
      OVERWRITE_SETTING_Accounts_Default_User_Preferences_idleTimeLimit: 120
      OVERWRITE_SETTING_Accounts_ForgetUserSessionOnWindowClose: true
      OVERWRITE_SETTING_Accounts_TwoFactorAuthenticationEnabled: false
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_NAME: ${ADMIN_USERNAME}
      ADMIN_PASS: ${ADMIN_PASSWORD}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      DISABLE_ANONYMOUS_READ: true
      DISABLE_ANONYMOUS_WRITE: true
    healthcheck:
      test: >
         /usr/local/bin/node -e '
         const http = require("http");
         const options = {
           host: "localhost",
           port: 3000,
           path: "/api/info",
           timeout: 2000
         };
         const healthCheck = http.request(options, (res) => {
           console.log(`HEALTHCHECK STATUS: $${res.statusCode}`);
           if (res.statusCode == 200) {
             process.exit(0);
           } else {
             process.exit(1);
           }
         });
         healthCheck.on("error", function (err) {
           console.error("ERROR");
           process.exit(1);
         });
         healthCheck.end();'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    labels:
      traefik.enable: true
      traefik.http.routers.rocketchat.rule: Host(`${ROCKETCHAT_HOSTNAME}`)
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
#      traefik:
#        condition: service_healthy

      networks:
        vpn_internal:
          ipv4_address: 172.16.0.2
#
#  traefik:
#    image: traefik:2.8
#    container_name: traefik
#    command:
#      - "--log.level=WARN"
#      - "--accesslog=true"
#      - "--api.dashboard=false"
#      - "--api.insecure=true"
#      - "--ping=true"
#      - "--ping.entrypoint=ping"
#      - "--entryPoints.ping.address=:8082"
#      - "--entryPoints.web.address=:80"
#      - "--entryPoints.websecure.address=:443"
#      - "--providers.docker=true"
#      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
#      - "--providers.docker.exposedByDefault=false"
#      - "--metrics.prometheus=true"
#      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
#      - "--global.checkNewVersion=true"
#      - "--global.sendAnonymousUsage=false"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - traefik-certificates:/etc/traefik/acme
#    ports:
#      - "80:80"
#      - "443:443"
#    healthcheck:
#      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 5s
#    labels:
#      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
#      - "traefik.http.routers.http-catchall.entrypoints=web"
#    restart: unless-stopped
#    networks:
#      vpn_internal:
#        ipv4_address: 172.16.0.2
